{"version":3,"sources":["redux/user/UserTypes.js","redux/iceCream/IceCreamTypes.js","redux/cake/CakeAction.js","redux/cake/CakeTypes.js","components/CakeContainer.js","redux/cake/CakeReducer.js","redux/iceCream/IceCreamReducer.js","redux/user/UserReducer.js","redux/RootReducer.js","redux/Store.js","components/HooksCakeContainer.js","components/IceCreamContainer.js","redux/iceCream/IceCreamAction.js","components/NewCakeContainer.js","redux/user/UserAction.js","components/UserContainer.js","components/Post/PostPaginate.js","components/Post/Pagination.js","components/Post/Post.js","components/ScrollPost/ScrollPosts.js","components/FileUpload/FileUpload.js","components/FileUpload/PostUpload.js","components/MyNav.js","components/HOC/WithCounter.js","components/HOC/ClickCounter.js","components/HOC/HoverCounter.js","components/RenderProps/ClickCounterTwo.js","components/RenderProps/HoverCounterTwo.js","components/RenderProps/User.js","components/RenderProps/Counter.js","components/Fragments/Table.js","components/HOC/Hocdemo/TableRow.js","components/HOC/Hocdemo/StockList.js","components/HOC/Hocdemo/UserList.js","components/HOC/Hocdemo/Hoc.js","components/RenderProps/Propsdemo/Props.js","components/RenderProps/Propsdemo/propsTable.js","components/RenderProps/Propsdemo/PropUsers.js","components/RenderProps/Propsdemo/PropStocks.js","components/Context/car.js","components/Context/MyContext.js","components/Context/Cars.js","components/Context/ProductList.js","components/PureComponent_Memo/PureComp.js","components/Context/Context.js","components/Context/MyProvider.js","components/PureComponent_Memo/RegComp.js","components/PureComponent_Memo/MemoComp.js","components/PureComponent_Memo/ParentComp.js","App.js","serviceWorker.js","index.js"],"names":["FETCH_USERS_REQUEST","FETCH_USERS_SUCCESS","FETCH_USERS_FAILURE","BUY_ICECREAM","buyCake","number","type","payload","addCake","number1","connect","state","numberOfCakes","cake","dispatch","props","onClick","initialState","cakeReducer","action","parseInt","require","numberOfIceCreams","iceCreamReducer","loading","users","error","userReducer","rootReducer","combineReducers","iceCream","user","store","createStore","applyMiddleware","thunk","HooksCakeContainer","useSelector","useDispatch","buyIceCream","useState","setNumber","setNumber1","value","onChange","e","target","fetchUsers","axios","get","then","response","data","fetchUsersSuccess","catch","errMsg","message","fetchUsersFailure","userData","useEffect","className","map","id","name","email","address","street","zipcode","phone","website","PostPaginate","this","posts","post","key","title","body","Component","Pagination","postsPerPage","totalPosts","paginate","nextPage","prevPage","pageNumbers","i","Math","ceil","push","href","num","Post","currentPage","postPerPage","a","setState","results","console","log","getPosts","indexOfLastPost","indexOfFirstPost","currentPosts","slice","length","pageNum","ScrollPosts","componentDidMount","FileUpload","selectedFile","albumId","url","thumbnailUrl","onFileChange","event","files","onFileUpload","formData","FormData","append","fileData","PostUpload","requestOptions","method","headers","JSON","stringify","fetch","json","MyNav","to","exact","path","IceCreamContainer","updatedComponent","OriginalComponent","incrementCount","prevState","count","React","UpdatedComponent","onMouseOver","Table","TableRow","obj","StockList","Array","object","tabRow","UserList","Hoc","HocComponent","PropsTable","Car","price","incrementPrice","decrementPrice","MyContext","createContext","Cars","Consumer","context","Object","keys","cars","carID","ProductList","PureComp","PureComponent","RegComp","memo","ParentComp","setInterval","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b612a43d.chunk.js","sourcesContent":["export const FETCH_USERS_REQUEST = 'FETCH_USERS_REQUEST'\r\nexport const FETCH_USERS_SUCCESS = 'FETCH_USERS_SUCCESS'\r\nexport const FETCH_USERS_FAILURE = 'FETCH_USERS_FAILURE'","export const BUY_ICECREAM = 'BUY_ICECREAM'","import {BUY_CAKE} from './CakeTypes'\r\nimport { ADD_CAKE } from './CakeTypes'\r\n\r\nexport const buyCake = (number = 1) => {\r\n    return {\r\n        type : BUY_CAKE,\r\n        payload: number\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const addCake = (number1 = 1) => {\r\n    return {\r\n        type : ADD_CAKE,\r\n        payload: number1\r\n    }\r\n}","export const BUY_CAKE ='BUY_CAKE'\r\nexport const ADD_CAKE = 'ADD_CAKE'","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport { buyCake } from '../redux/cake/CakeAction'\r\nimport { addCake } from '../redux/cake/CakeAction'\r\n\r\nfunction CakeContainer(props) {\r\n   \r\n    return (\r\n        <div>\r\n            <h2>No. of cakes using connect - {props.numberOfCakes}</h2>\r\n            <button onClick={props.buyCake}>Buy Cake</button>\r\n         \r\n            <button onClick={props.addCake}>add Cake</button>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        numberOfCakes: state.cake.numberOfCakes\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return ({\r\n        buyCake : () => dispatch(buyCake()),\r\n        addCake : () => dispatch(addCake())\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CakeContainer)\r\n","import { BUY_CAKE } from './CakeTypes'\r\nimport { ADD_CAKE } from './CakeTypes'\r\n\r\n\r\n\r\nconst initialState = {\r\n    numberOfCakes : 10\r\n}\r\n\r\nconst cakeReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case BUY_CAKE:\r\n            return {\r\n                ...state,\r\n                numberOfCakes : state.numberOfCakes - action.payload\r\n\r\n            }\r\n        case ADD_CAKE:\r\n            return {\r\n                ...state,\r\n                numberOfCakes : state.numberOfCakes + parseInt(action.payload)\r\n                \r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default cakeReducer\r\n","const { BUY_ICECREAM } = require(\"./IceCreamTypes\")\r\n\r\nconst initialState = {\r\n    numberOfIceCreams : 20\r\n}\r\n\r\n\r\nconst iceCreamReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case BUY_ICECREAM:\r\n            return {\r\n                ...state,\r\n                numberOfIceCreams : state.numberOfIceCreams - 1\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport default iceCreamReducer","const { FETCH_USERS_REQUEST, FETCH_USERS_SUCCESS, FETCH_USERS_FAILURE } = require(\"./UserTypes\")\r\n\r\nconst initialState = {\r\nloading : false,\r\nusers : [],\r\nerror : ''\r\n}\r\n\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case FETCH_USERS_REQUEST:\r\n            return{\r\n                ...state,\r\n                loading : true,\r\n            }\r\n        \r\n        case FETCH_USERS_SUCCESS:\r\n            return{\r\n                loading : false,\r\n                users : action.payload,\r\n                error : ''\r\n            }\r\n        \r\n        case FETCH_USERS_FAILURE:\r\n            return{\r\n                loading : false,\r\n                users : [],\r\n                error : action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default userReducer","import {combineReducers} from 'redux'\r\nimport cakeReducer from './cake/CakeReducer'\r\nimport iceCreamReducer from './iceCream/IceCreamReducer'\r\nimport userReducer from './user/UserReducer'\r\n\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    cake: cakeReducer,\r\n    iceCream : iceCreamReducer,\r\n    user : userReducer\r\n})\r\n\r\n\r\n\r\nexport default rootReducer","import {createStore, applyMiddleware} from 'redux'\r\n// import logger from'redux-logger'\r\nimport rootReducer from './RootReducer'\r\nimport thunk from 'redux-thunk'\r\n\r\n\r\n\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\n\r\nexport default store","import React from 'react'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport { buyCake } from '../redux/cake/CakeAction'\r\n\r\nfunction HooksCakeContainer() {\r\n    const numberOfCakes = useSelector(state => state.cake.numberOfCakes)\r\n    const dispatch = useDispatch()\r\n    return (\r\n        <div>\r\n            <h2>number of cakes using useselector and UseDispatch - {numberOfCakes}</h2>\r\n            <button onClick={()=>dispatch(buyCake())}>buy cake</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HooksCakeContainer\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { buyIceCream } from '../redux/iceCream/IceCreamAction'\r\n\r\n\r\nfunction CakeContainer(props) {\r\n    \r\n    return (\r\n        <div>\r\n            <h2>No. of icecream using connect - {props.numberOfIceCreams}</h2>\r\n            <button onClick={props.buyIceCream}>Buy IceCream</button>\r\n         \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        numberOfIceCreams: state.iceCream.numberOfIceCreams\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        buyIceCream : () => dispatch(buyIceCream())\r\n        \r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CakeContainer)\r\n","import { BUY_ICECREAM } from './IceCreamTypes'\r\n\r\n\r\nexport const buyIceCream = () => {\r\n    return{\r\n        type: BUY_ICECREAM\r\n    }\r\n}\r\n\r\n\r\n","import React, {useState} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport { buyCake } from '../redux/cake/CakeAction'\r\nimport { addCake } from '../redux/cake/CakeAction'\r\n\r\nfunction NewCakeContainer(props) {\r\n   \r\n    const [number, setNumber] = useState(1)\r\n    const [number1, setNumber1] = useState(1)\r\n    return (\r\n        <div>\r\n            <h2>No. of cakes using connect - {props.numberOfCakes}</h2>\r\n            <input type=\"text\" value={number} onChange={e =>setNumber(e.target.value)} ></input>\r\n            <button onClick={()=>props.buyCake(number)}>Buy {number} Cake</button>\r\n            \r\n            <hr></hr>\r\n            <input type=\"text\" value={number1} onChange={e =>setNumber1(e.target.value)}></input>\r\n            <button onClick={() =>props.addCake(number1)}>add {number1} Cake</button>\r\n            <hr></hr>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        numberOfCakes: state.cake.numberOfCakes\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return ({\r\n        buyCake : (number) => dispatch(buyCake(number)),\r\n        addCake : (number1) => dispatch(addCake(number1))\r\n    })\r\n}\r\n\r\n\r\n       \r\n   \r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewCakeContainer)\r\n","import { FETCH_USERS_REQUEST, FETCH_USERS_SUCCESS, FETCH_USERS_FAILURE } from './UserTypes'\r\nimport axios from 'axios'\r\n\r\nexport const fetchUsersResquest = () => {\r\n   return {\r\n    type: FETCH_USERS_REQUEST\r\n   }\r\n  \r\n}\r\n\r\n export const fetchUsersSuccess = (users) => {\r\n    return {\r\n     type: FETCH_USERS_SUCCESS,\r\n     payload: users\r\n    }\r\n   \r\n }\r\n\r\nexport const fetchUsersFailure = (error) => {\r\n    return {\r\n     type: FETCH_USERS_FAILURE,\r\n     payload: error\r\n    }\r\n   \r\n }\r\n\r\n\r\nexport const fetchUsers = () => {\r\n    return (dispatch) => {\r\n        dispatch(fetchUsersResquest())\r\n        axios.get('https://jsonplaceholder.typicode.com/users')\r\n            .then(response =>{\r\n            const users = response.data\r\n            dispatch(fetchUsersSuccess(users))\r\n        })\r\n            .catch(error =>{\r\n            const errMsg = error.message\r\n            dispatch(fetchUsersFailure(errMsg))\r\n        })\r\n    }\r\n}","import React, {useEffect} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport { fetchUsers } from '../redux/user/UserAction'\r\n\r\n\r\nfunction UserContainer({userData, fetchUsers}) {\r\n    \r\n    useEffect( () => {\r\n        fetchUsers()\r\n    }, [])\r\n        return userData.loading ? \r\n            ( <h2>Loading...</h2> ) :\r\n                userData.error ? (\r\n                    <h2>{userData.error}</h2>\r\n                        ) : (\r\n                <div>\r\n                        <h2>Users List</h2>\r\n                    <div className=\"alert alert-primary\"> \r\n                        {\r\n                            userData && \r\n                            userData.users &&\r\n                            userData.users.map(user => \r\n                                <div>\r\n                                    <p>{user.id} </p>\r\n                                    <p>{user.name}</p>\r\n                                    <p>{user.email}</p>\r\n                                    <p>{user.address.street}</p>  \r\n                                    <p>{user.address.zipcode}</p>\r\n                                    <p>{user.phone}</p>\r\n                                    <p>{user.website}</p>\r\n                               \r\n                                </div>\r\n                            \r\n                            \r\n                        )\r\n                        }\r\n                    </div>\r\n                 </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    userData : state.user\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return  {\r\n        fetchUsers : () => dispatch(fetchUsers())\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserContainer)\r\n","import React, { Component } from 'react'\r\n\r\nexport class PostPaginate extends Component {\r\n    render() {\r\n        const  {posts, loading} = this.props\r\n\r\n        if(loading){\r\n            return <h2>Loading....</h2>\r\n        }\r\n        return (\r\n            <div>\r\n                {\r\n                    posts.map(post => (\r\n                        <div key={post.id} className=\"alert alert-primary\">\r\n                            <h4 className=\"alert-heading\">{post.title}</h4>\r\n                            <p>{post.body}</p>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PostPaginate\r\n","import React, { Component } from 'react'\r\n\r\n\r\nexport class Pagination extends Component {\r\n    render() {\r\n\r\n        const {postsPerPage, totalPosts, paginate, nextPage, prevPage} = this.props;\r\n        const pageNumbers = [];\r\n\r\n        for(let i=1; i <= Math.ceil(totalPosts / postsPerPage); i++){\r\n            pageNumbers.push(i);\r\n        }\r\n\r\n        const previousPage = () => {\r\n            if(paginate){\r\n               return ()=>prevPage()\r\n            }\r\n            \r\n        }\r\n\r\n        const nextpage = () => {\r\n            if(paginate){\r\n                return ()=>nextPage()\r\n            }\r\n        }\r\n\r\n        return (\r\n            <nav>\r\n                <ul className=\"pagination justify-content-center\">\r\n                    \r\n                   \r\n                        <li className=\"page-item\">\r\n                            <a href=\"#\" className=\"page-link\" onClick={previousPage}>Previous</a>\r\n                        </li>  \r\n                     \r\n            {\r\n                pageNumbers.map(num => (\r\n                    <li className=\"page-item\" key={num}>\r\n                       <a onClick={() =>paginate(num)} href=\"#\" className=\"page-link\">{num}</a>\r\n                    </li>\r\n                ))\r\n            }\r\n\r\n                         <li className=\"page-item\">\r\n                            <a href=\"#\" className=\"page-link\" onClick={nextpage}>Next</a>\r\n                         </li>\r\n\r\n                </ul>\r\n            </nav>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default Pagination\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios';\r\nimport PostPaginate from './PostPaginate';\r\nimport Pagination from './Pagination';\r\n\r\nexport class Post extends Component {\r\n\r\n    state = {\r\n        posts : [],\r\n        loading : false,\r\n        currentPage : 1,\r\n        postPerPage : 4\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n    const getPosts = async() => {\r\n            this.setState({loading:true})\r\n\r\n            const results = await axios.get('https://jsonplaceholder.typicode.com/posts')\r\n\r\n            this.setState({posts: results.data})\r\n\r\n            this.setState({loading:false})\r\n\r\n            console.log(results.data);\r\n\r\n        }\r\n        getPosts();\r\n    }\r\n\r\n    render() {\r\n\r\n        const { currentPage, postPerPage, posts, loading } = this.state\r\n\r\n        const indexOfLastPost = currentPage * postPerPage;\r\n        const indexOfFirstPost = indexOfLastPost - postPerPage;\r\n        const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost )\r\n\r\n        const paginate = pageNum => this.setState({currentPage : pageNum})\r\n        const nextPage = () => this.setState({currentPage : currentPage + 1})\r\n        const prevPage = () => this.setState({currentPage : currentPage - 1})\r\n        return (\r\n            <div className=\"container\">\r\n                <h2 className=\"my-5 text-priamry text center\" ></h2>\r\n                <PostPaginate posts = {currentPosts} loading = {loading}/>\r\n                <Pagination postsPerPage = {postPerPage} totalPosts={posts.length} paginate ={paginate} nextPage={nextPage} prevPage={prevPage}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Post\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\n\r\n\r\nexport class ScrollPosts extends Component {\r\n\r\n    state = {\r\n        loading: false,\r\n        posts: [],\r\n\r\n    }\r\n\r\n\r\n    componentDidMount = () => {\r\n        const getPosts = async() => {\r\n            this.setState({loading:true})\r\n\r\n            const results = await axios.get('https://jsonplaceholder.typicode.com/posts')\r\n\r\n            this.setState({posts: results.data})\r\n\r\n            this.setState({loading:false})\r\n\r\n            console.log(results.data);\r\n\r\n        }\r\n        getPosts();\r\n    }\r\n\r\n    render() {\r\n     const {posts} = this.state;\r\n   \r\n     \r\n\r\n        return (\r\n            posts.map(post => \r\n                (  \r\n                   \r\n                    <div className=\"alert alert-primary\">\r\n                        <p key={post.id} className=\"alert-heading\">{post.id}.  {post.title}</p>\r\n                     </div>\r\n                 \r\n                )\r\n            )\r\n        )\r\n    }\r\n}\r\n\r\nexport default ScrollPosts\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\n\r\nexport class FileUpload extends Component {\r\n\r\n    state = {\r\n        selectedFile : null ,\r\n        albumId: null,\r\n        id: null,\r\n        title: null,\r\n        url: null,\r\n        thumbnailUrl: null\r\n    }\r\n\r\n    onFileChange = event => { \r\n     \r\n        // Update the state \r\n        this.setState({ \r\n          selectedFile: event.target.files[0],\r\n          id : 5001,\r\n          albumId : 101,\r\n          title : event.target.files[0].name,\r\n          url: event.target.value,\r\n          thumbnailUrl: event.target.files[0].type\r\n\r\n           }); \r\n       \r\n      }; \r\n\r\n\r\n      onFileUpload = () => { \r\n     \r\n        // Create an object of formData \r\n        const formData = new FormData(); \r\n\r\n        // Update the formData object \r\n        formData.append( \r\n        this.state.selectedFile, \r\n        this.state.selectedFile.name,\r\n        \r\n        ); \r\n              \r\n        // Details of the uploaded file \r\n        console.log(this.state); \r\n            \r\n        // Send formData object \r\n        axios.post(\"https://jsonplaceholder.typicode.com/photos\", formData); \r\n        \r\n      }; \r\n\r\n      fileData = () => { \r\n     \r\n        if (this.state.selectedFile) { \r\n            \r\n          return ( \r\n            <div> \r\n                <br></br>\r\n              <h2>File Details:</h2> \r\n            \r\n              <p>File Name: {this.state.title}</p> \r\n              <p>File Type: {this.state.thumbnailUrl}</p> \r\n            </div> \r\n          ); \r\n        } else { \r\n          return ( \r\n            <div> \r\n              <br /> \r\n              <h4>Choose before Pressing the Upload button</h4> \r\n            </div> \r\n          ); \r\n        } \r\n      }; \r\n    render() {\r\n\r\n       \r\n        return (\r\n            <div>\r\n                <h2>Upload file using react js </h2>\r\n                <div>\r\n                    \r\n                    <input type=\"file\" onChange={this.onFileChange} />\r\n                    <button onClick={this.onFileUpload}> \r\n                    Upload! \r\n                    </button> \r\n                </div>\r\n                {this.fileData()} \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FileUpload\r\n","import React, { Component } from 'react'\r\n\r\nexport class PostUpload extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             albumId: null,\r\n     \r\n        }\r\n    }\r\n    \r\n\r\n    componentDidMount() {\r\n        // Simple POST request with a JSON body using fetch\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ title: 'POST Request' })\r\n        };\r\n        fetch('https://jsonplaceholder.typicode.com/photos', requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({ albumId: data.id }));\r\n    }\r\n\r\n\r\n    render() {\r\n        const {albumId} = this.state\r\n        return (\r\n            <div>\r\n                <h3>postId is {albumId} </h3>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PostUpload\r\n","import React, { Component } from 'react'\r\nimport {Link, BrowserRouter as Router, Route, Switch, NavLink} from 'react-router-dom';\r\nimport CakeContainer from './CakeContainer';\r\nimport HooksCakeContainer from './HooksCakeContainer';\r\nimport IceCreamContainer from './IceCreamContainer';\r\nimport NewCakeContainer from './NewCakeContainer';\r\nimport UserContainer from './UserContainer';\r\nimport Post from './Post/Post';\r\nimport ScrollPosts from './ScrollPost/ScrollPosts';\r\nimport FileUpload from './FileUpload/FileUpload';\r\nimport PostUpload from './FileUpload/PostUpload';\r\n\r\nexport class MyNav extends Component {\r\n    render() {\r\n        return (\r\n        <Router>\r\n            <div>\r\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-light\" >\r\n                    <NavLink className=\"navbar-brand\" to=\"/\" >React Learning</NavLink>\r\n                        <div className=\"collapse navbar-collapse\" id=\"navbarText\">\r\n                        <ul className=\"navbar-nav mr-auto\">\r\n                        \r\n                   \r\n\r\n                            <li className=\"nav-item\" >\r\n                                <Link to=\"/CakeContainer\" className=\"nav-link\">Cake</Link>\r\n                            </li>\r\n                                \r\n                            <li className=\"nav-item\" >\r\n                                <Link to=\"/HooksCakeContainer\" className=\"nav-link\">HooksCake</Link>\r\n                            </li>\r\n\r\n                            <li className=\"nav-item\" >\r\n                                <Link to=\"/IceCreamContainer\" className=\"nav-link\">IceCream</Link>\r\n                            </li>\r\n\r\n                            <li className=\"nav-item\" > \r\n                                <Link to=\"/NewCakeContainer\" className=\"nav-link\">NewCake</Link>\r\n                            </li>\r\n\r\n                            <li className=\"nav-item\" >\r\n                                <Link to=\"/UserContainer\" className=\"nav-link\">Users</Link>\r\n                            </li>\r\n\r\n                            <li className=\"nav-item\" >\r\n                                <Link to=\"/Post\" className=\"nav-link\">Posts</Link>\r\n                            </li>\r\n\r\n                            <li className=\"nav-item\" >\r\n                                <Link to=\"/ScrollPosts\" className=\"nav-link\"> ScrollPosts</Link>\r\n                            </li>\r\n\r\n                            <li className=\"nav-item\" >\r\n                                <Link to=\"/FileUpload\" className=\"nav-link\"> FileUpload</Link>\r\n                            </li>\r\n\r\n                            <li className=\"nav-item\" >\r\n                                <Link to=\"/PostUpload\" className=\"nav-link\"> PostUpload</Link>\r\n                            </li>\r\n\r\n                        </ul>\r\n                        </div>\r\n                </nav>\r\n\r\n                    \r\n\r\n\r\n                    <Switch>\r\n                \r\n                        <Route exact path=\"/CakeContainer\">\r\n                            <CakeContainer />\r\n                        </Route>\r\n\r\n                        <Route exact path=\"/HooksCakeContainer\">\r\n                            <HooksCakeContainer />\r\n                        </Route>\r\n\r\n                        <Route exact path=\"/IceCreamContainer\">\r\n                            <IceCreamContainer />\r\n                        </Route>\r\n\r\n                        <Route exact path=\"/NewCakeContainer\">\r\n                            <NewCakeContainer />\r\n                        </Route>\r\n\r\n                        <Route exact path=\"/UserContainer\">\r\n                            <UserContainer />\r\n                        </Route>\r\n\r\n                        <Route exact path=\"/Post\">\r\n                            <Post />\r\n                        </Route>\r\n\r\n                        <Route exact path=\"/ScrollPosts\">\r\n                            <ScrollPosts />\r\n                        </Route>\r\n\r\n                        <Route exact path=\"/FileUpload\">\r\n                            <FileUpload />\r\n                        </Route>\r\n\r\n                        <Route exact path=\"/PostUpload\">\r\n                            <PostUpload />\r\n                        </Route>\r\n\r\n        \r\n                    </Switch>\r\n                </div>\r\n\r\n        </Router>\r\n          \r\n        )\r\n    }\r\n}\r\n\r\nexport default MyNav\r\n","import React from 'react'\r\n\r\nconst updatedComponent = (OriginalComponent) => {\r\n class NewComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             count:0\r\n        }\r\n    }\r\n    \r\n    incrementCount = () =>{\r\n        this.setState(prevState =>  {\r\n           return {count:prevState.count + 1} \r\n        })\r\n    }\r\n     render(){\r\n         console.log(this.props.name);\r\n         \r\n         return <OriginalComponent  count={this.state.count} incrementCount={this.incrementCount}  {...this.props}/>\r\n     }\r\n\r\n }\r\n return NewComponent\r\n}\r\n\r\n\r\nexport default updatedComponent","import React, { Component } from 'react'\r\nimport UpdatedComponent from './WithCounter'\r\n\r\nclass ClickCounter extends Component {\r\n\r\n    render() {\r\n   \r\n        const {count,incrementCount} = this.props\r\n        return (\r\n            <div>\r\n                <button onClick={incrementCount}> {this.props.name} Clicked {count} times </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UpdatedComponent(ClickCounter)\r\n","import React, { Component } from 'react'\r\nimport UpdatedComponent from './WithCounter'\r\nclass HoverCounter extends Component {\r\n    \r\n    render() {\r\n        const {count,incrementCount} = this.props\r\n        return (\r\n            <div>\r\n                <h2 onMouseOver={incrementCount}>  hover {count} times </h2>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UpdatedComponent(HoverCounter)\r\n","import React, { Component } from 'react'\r\n\r\nclass ClickCounterTwo extends Component {\r\n\r\n    render() {\r\n        const { count, incrementCount } =this.props\r\n        return (\r\n            <div>\r\n                <button onClick={incrementCount}> ClickTwo {count} times</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ClickCounterTwo\r\n","import React, { Component } from 'react'\r\n\r\nclass HoverCounterTwo extends Component {\r\n\r\n    render() {\r\n        const { count, incrementCount } =this.props\r\n        return (\r\n            <div>\r\n                <h2 onMouseOver={incrementCount}>Hover2 {count} times</h2>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HoverCounterTwo\r\n","import React, { Component } from 'react'\r\n\r\nclass User extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.render(true)}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default User\r\n","import React, { Component } from 'react'\r\n\r\nclass Counter extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             count:0\r\n        }\r\n    }\r\n\r\n    incrementCount = () => {\r\n        this.setState(prevState => {\r\n            return { count:prevState.count + 1 }\r\n        })\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.children(this.state.count, this.incrementCount)}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Counter\r\n","import React from 'react'\r\nimport Columns from './Columns'\r\n\r\nfunction Table() {\r\n    return (\r\n \r\n            <table>\r\n                <tbody>\r\n                    <tr>\r\n                        <Columns/>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n    \r\n    )\r\n}\r\n\r\nexport default Table\r\n","import React, { Component } from 'react';\r\n\r\nclass TableRow extends Component {\r\n  render() {\r\n    return (\r\n        <tr>\r\n          <td>\r\n            {this.props.obj.id}\r\n          </td>\r\n          <td>\r\n            {this.props.obj.name}\r\n          </td>\r\n        </tr>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableRow;","import React, { Component } from 'react';\r\nimport TableRow from './TableRow';\r\n\r\nclass StockList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n      }\r\n      \r\n      tabRow(){\r\n        if(this.props.data instanceof Array){\r\n          return this.props.data.map(function(object, i){\r\n              return <TableRow obj={object} key={i} />;\r\n          })\r\n        }\r\n      }\r\n      render() {\r\n        return (\r\n            <div className=\"container\">\r\n            <table className=\"table table-striped\">\r\n              <thead>\r\n                <tr>\r\n                  <td>ID</td>\r\n                  <td>Name</td>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {this.tabRow()}\r\n              </tbody>\r\n            </table>\r\n        </div>\r\n        );\r\n      }\r\n}\r\nexport default StockList;","import React, { Component } from 'react';\r\nimport TableRow from './TableRow';\r\n\r\nclass UserList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n      }\r\n      \r\n      tabRow(){\r\n        if(this.props.data instanceof Array){\r\n          return this.props.data.map(function(object, i){\r\n              return <TableRow obj={object} key={i} />;\r\n          })\r\n        }\r\n      }\r\n      render() {\r\n        return (\r\n            <div className=\"container\">\r\n            <table className=\"table table-striped\">\r\n              <thead>\r\n                <tr>\r\n                  <td>ID</td>\r\n                  <td>Name</td>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {this.tabRow()}\r\n              </tbody>\r\n            </table>\r\n        </div>\r\n        );\r\n      }\r\n}\r\nexport default UserList;","import React, {Component} from 'react';\r\n\r\nexport default function Hoc(HocComponent, data){\r\n    return class extends Component{\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                data: data\r\n            };\r\n        }\r\n        \r\n        render(){\r\n            return (\r\n                <HocComponent data={this.state.data} {...this.props} />\r\n            );\r\n        }\r\n    } \r\n}","import React, { Component } from 'react'\r\n\r\nexport class Props extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            UsersData : [\r\n                {\r\n                    id: 1,\r\n                    name: 'Krunal'\r\n                      \r\n                },\r\n                {\r\n                    id: 2,\r\n                    name: 'Ankit'\r\n                },\r\n                {\r\n                    id: 3,\r\n                    name: 'Rushabh'\r\n                }\r\n              ] ,\r\n            //   StocksData : [\r\n            //     {\r\n            //         id: 1,\r\n            //         name: 'TCS'\r\n                      \r\n            //     },\r\n            //     {\r\n            //         id: 2,\r\n            //         name: 'Infosys'\r\n            //     },\r\n            //     {\r\n            //         id: 3,\r\n            //         name: 'Reliance'\r\n            //     }\r\n            //   ]\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        console.log(this.props);\r\n        \r\n        return (\r\n            <div>\r\n                 {\r\n                 this.props.children(this.state.UsersData,{... this.props})\r\n                 }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Props\r\n","import React, { Component } from 'react'\r\n\r\nclass PropsTable extends Component {\r\n    render() {\r\n        return (\r\n            <tr>\r\n              <td>\r\n                {this.props.obj.id}\r\n              </td>\r\n              <td>\r\n                {this.props.obj.name}\r\n              </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PropsTable\r\n","import React, { Component } from 'react'\r\nimport PropsTable from './propsTable';\r\n\r\nclass PropUsers extends Component {\r\n\r\n    tabRow(){\r\n        if(this.props.data instanceof Array){\r\n          return this.props.data.map(function(object, i){\r\n              return <PropsTable obj={object} key={i} />;\r\n          })\r\n        }\r\n      }\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n            <table className=\"table table-striped\">\r\n              <thead>\r\n                <tr>\r\n                  <td>ID</td>\r\n                  <td>Name</td>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {this.tabRow()}\r\n              </tbody>\r\n            </table>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PropUsers\r\n","import React, { Component } from 'react'\r\nimport PropsTable from './propsTable';\r\n\r\nexport class PropStocks extends Component {\r\n    tabRow(){\r\n        if(this.props.stocks instanceof Array){\r\n          return this.props.stocks.map(function(object, i){\r\n              return <PropsTable obj={object} key={i} />;\r\n          })\r\n        }\r\n      }\r\n    render() {\r\n        console.log(this.props.stocks);\r\n        return (\r\n            <div className=\"container\">\r\n            <table className=\"table table-striped\">\r\n              <thead>\r\n                <tr>\r\n                  <td>ID</td>\r\n                  <td>Name</td>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {this.tabRow()}\r\n              </tbody>\r\n            </table>\r\n        </div>\r\n        );\r\n    \r\n    }\r\n}\r\n\r\nexport default PropStocks\r\n","import React, { Fragment } from 'react'\r\n\r\nconst Car = props => (\r\n    <Fragment>\r\n        <p>Name: {props.name}</p>\r\n        <p>Price: ${props.price}</p>\r\n        <button onClick={props.incrementPrice}> + </button>\r\n        <button onClick={props.decrementPrice}> - </button>\r\n    </Fragment>\r\n);\r\n\r\nexport default Car","import React from 'react'\r\n\r\nconst MyContext = React.createContext();\r\n\r\nexport default MyContext","\r\nimport React, { Fragment } from 'react'\r\nimport Car from './car';\r\nimport MyContext from './MyContext';\r\n\r\nconst Cars = props => (\r\n    // it is used whrn we send via prps\r\n\r\n\r\n    // <Fragment>\r\n    //     <h4>Cars:</h4>\r\n    //     {/* Finally we can use data */}\r\n    //     {Object.keys(props.cars).map(carID => (\r\n    //         <Car\r\n    //             key={carID}\r\n    //             name={props.cars[carID].name}\r\n    //             price={props.cars[carID].price}\r\n    //             incrementPrice={() => props.incrementCarPrice(carID)}\r\n    //             decrementPrice={() => props.decrementCarPrice(carID)}\r\n    //         />\r\n    //     ))}\r\n    // </Fragment>\r\n\r\n\r\n    // used when we use Context \r\n    <MyContext.Consumer>\r\n    {context => (\r\n            <Fragment>\r\n                <h4>Cars:</h4>\r\n                {Object.keys(context.cars).map(carID => (\r\n                    <Car\r\n                        key={carID}\r\n                        name={context.cars[carID].name}\r\n                        price={context.cars[carID].price}\r\n                        incrementPrice={() => context.incrementPrice(carID)}\r\n                        decrementPrice={() => context.decrementPrice(carID)}\r\n                    />\r\n                ))}\r\n            </Fragment>\r\n        )}\r\n    </MyContext.Consumer>\r\n);\r\nexport default Cars","\r\nimport React from 'react'\r\nimport Cars from './Cars';\r\n\r\nconst ProductList = props => (\r\n    <div>\r\n        <h2>Product list:</h2>\r\n        {/* Pass props twice */}\r\n        {/* <Cars\r\n            cars={props.cars}\r\n            incrementCarPrice={props.incrementCarPrice}\r\n            decrementCarPrice={props.decrementCarPrice}\r\n        /> */}\r\n            {/* For the context we need not need to pass any props or methods */}\r\n        <Cars/>\r\n    </div>\r\n);\r\n\r\nexport default ProductList;","import React, { Component, PureComponent } from 'react'\r\n\r\nclass PureComp extends PureComponent {\r\n    render() {\r\n        // console.log(\"pure Component\");\r\n        return (\r\n            <div>\r\n                  Pure Component {this.props.name}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PureComp\r\n","import React, { Component } from 'react'\r\nimport ProductList from './ProductList';\r\n\r\nclass Context extends Component {state = {\r\n    cars: {\r\n        car001: { name: 'Honda', price: 100 },\r\n        car002: { name: 'BMW', price: 150 },\r\n        car003: { name: 'Mercedes', price: 200 }\r\n    }\r\n};\r\n// incrementCarPrice = this.incrementCarPrice.bind(this);\r\n// decrementCarPrice = this.decrementCarPrice.bind(this);\r\n\r\nincrementCarPrice = this.incrementCarPrice.bind(this)\r\ndecrementCarPrice = this.decrementCarPrice.bind(this);\r\n\r\nincrementCarPrice(selectedID) {\r\n    // a simple method that manipulates the state\r\n    const cars = Object.assign({}, this.state.cars);    \r\n    cars[selectedID].price = cars[selectedID].price + 1;\r\n    this.setState({\r\n        cars\r\n    });\r\n}\r\n\r\ndecrementCarPrice(selectedID) {\r\n    // a simple method that manipulates the state\r\n    const cars = Object.assign({}, this.state.cars);\r\n    cars[selectedID].price = cars[selectedID].price - 1;\r\n    this.setState({\r\n        cars\r\n    });\r\n}\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ProductList\r\n                    cars={this.state.cars}\r\n                    incrementCarPrice={this.incrementCarPrice}\r\n                    decrementCarPrice={this.decrementCarPrice}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Context\r\n","import React, { Component } from 'react'\r\nimport MyContext from './MyContext';\r\n\r\nclass MyProvider extends Component {\r\n    state = {\r\n        cars: {\r\n            car001: { name: 'Honda', price: 100 },\r\n            car002: { name: 'BMW', price: 150 },\r\n            car003: { name: 'Mercedes', price: 200 }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <MyContext.Provider\r\n                value={{\r\n                    cars: this.state.cars,\r\n                    incrementPrice: selectedID => {\r\n                        const cars = Object.assign({}, this.state.cars);\r\n                        cars[selectedID].price = cars[selectedID].price + 1;\r\n                        this.setState({\r\n                            cars\r\n                        });\r\n                    },\r\n                    decrementPrice: selectedID => {\r\n                        const cars = Object.assign({}, this.state.cars);\r\n                        cars[selectedID].price = cars[selectedID].price - 1;\r\n                        this.setState({\r\n                            cars\r\n                        });\r\n                    }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </MyContext.Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyProvider\r\n","import React, { Component } from 'react'\r\n\r\nclass RegComp extends Component {\r\n    render() {\r\n        // console.log(\"regular component\");\r\n        \r\n        return (\r\n            <div>\r\n                  Regular Component {this.props.name}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RegComp\r\n","import React from 'react'\r\n\r\nfunction MemoComp({name}) {\r\n    // console.log(\"Memo Component\");\r\n    \r\n    return (\r\n        <div>\r\n            Memo Component {name}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(MemoComp)\r\n","import React, { Component } from 'react'\r\nimport PureComp from './PureComp'\r\nimport RegComp from './RegComp'\r\nimport MemoComp from './MemoComp'\r\n\r\nclass ParentComp extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             name:\"\"\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        setInterval(() => {\r\n            this.setState({\r\n                name:\"Abhishek\"\r\n            })\r\n        },2000 )\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                 <PureComp name ={this.state.name}/>\r\n                 <RegComp name ={this.state.name}/>\r\n                 <MemoComp name={this.state.name}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ParentComp\r\n","import React from 'react';\nimport './App.css';\nimport CakeContainer from './components/CakeContainer';\nimport {Provider} from 'react-redux'\nimport store from './redux/Store'\nimport HooksCakeContainer from './components/HooksCakeContainer';\nimport IceCreamContainer from './components/IceCreamContainer';\nimport NewCakeContainer from './components/NewCakeContainer';\nimport UserContainer from './components/UserContainer';\nimport Post from './components/Post/Post';\nimport ScrollPosts from './components/ScrollPost/ScrollPosts';\nimport FileUpload from './components/FileUpload/FileUpload';\nimport PostUpload from './components/FileUpload/PostUpload';\nimport MyNav from './components/MyNav';\nimport ClickCounter from './components/HOC/ClickCounter';\nimport HoverCounter from './components/HOC/HoverCounter';\nimport ClickCounterTwo from './components/RenderProps/ClickCounterTwo';\nimport HoverCounterTwo from './components/RenderProps/HoverCounterTwo';\nimport User from './components/RenderProps/User';\nimport Counter from './components/RenderProps/Counter';\nimport FragmentDemo from './components/Fragments/FragmentDemo';\nimport Table from './components/Fragments/Table';\n\nimport StockList from './components/HOC/Hocdemo/StockList';\nimport UserList from './components/HOC/Hocdemo/UserList';\nimport Hoc from './components/HOC/Hocdemo/Hoc';\nimport Props from './components/RenderProps/Propsdemo/Props';\nimport PropUsers from './components/RenderProps/Propsdemo/PropUsers';\nimport PropStocks from './components/RenderProps/Propsdemo/PropStocks';\nimport Context from './components/Context/Context';\nimport MyProvider from './components/Context/MyProvider';\nimport ProductList from './components/Context/ProductList';\nimport ParentComp from './components/PureComponent_Memo/ParentComp';\n\n\nfunction App() {\n\n\n  const StocksData = [\n    {\n        id: 1,\n        name: 'TCS'\n          \n    },\n    {\n        id: 2,\n        name: 'Infosys'\n    },\n    {\n        id: 3,\n        name: 'Reliance'\n    }\n  ];\n  \n  const UsersData = [\n    {\n        id: 1,\n        name: 'Krunal'\n          \n    },\n    {\n        id: 2,\n        name: 'Ankit'\n    },\n    {\n        id: 3,\n        name: 'Rushabh'\n    }\n  ];\n  \n  const Stocks = Hoc(\n    StockList,\n    StocksData\n  );\n  \n  const Users = Hoc(\n    UserList,\n    UsersData\n  );\n\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        {/* <hr></hr>\n        <HooksCakeContainer/>\n        <hr></hr>\n        <CakeContainer/>\n        <hr></hr>\n        <IceCreamContainer/>\n        <hr></hr>\n        <NewCakeContainer/>\n        <hr></hr>\n        <UserContainer/>\n        <Post/>\n        <ScrollPosts/> */}\n\n        {/* <FileUpload/> */}\n        <MyNav/>\n\n        {/* <ClickCounter name={\"abhishek\"}/>\n        <HoverCounter /> */}\n\n        {/* <ClickCounterTwo/>\n        <HoverCounterTwo/> */}\n\n        {/* <User render ={(isLoggedIn)=> isLoggedIn ? 'abhishek' : 'guest'}/>\n\n        <Counter>\n            {(count, incrementCount)=>(\n              <ClickCounterTwo count={count} incrementCount={incrementCount}/>\n            )}\n        </Counter>  \n\n        <Counter >\n            {(count, incrementCount)=>(\n              <HoverCounterTwo count={count} incrementCount={incrementCount}/>\n            )}\n        </Counter>  */}\n\n        {/* <PostUpload/> */}\n\n\n        {/* <FragmentDemo/> */}\n        {/* <Table/> */}\n\n\n\n\n        {/* hoc */}\n\n  \n\n\n{/* <Users></Users>\n<hr></hr>\n<Stocks></Stocks> */}\n\n\n{/* <Props>\n            {\n            usersData => (\n                <PropUsers data={usersData}/>\n                )\n            }\n            \n</Props> */}\n\n{/* <Props>\n            {\n            stocksData => (\n                <PropStocks stocks={stocksData}/>\n                )\n            }\n</Props> */}\n\n{/* <Context/> */}\n\n\n{/* <MyProvider>\n  <ProductList/>\n</MyProvider> */}\n<ParentComp/>\n      </div>\n    </Provider>\n\n   \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}